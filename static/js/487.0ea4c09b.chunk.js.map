{"version":3,"file":"static/js/487.0ea4c09b.chunk.js","mappings":"wKAAaA,EAAS,WACpB,OACE,iCACE,gBAAKC,UAAU,8BACf,gBACEA,UAAU,mEACVC,MAAO,CAAEC,QAAS,QAASC,OAAQ,SAFrC,UAIE,gBAAKH,UAAU,4BAAf,UACE,iBAAMA,UAAU,kBAAhB,8BAKT,C,gKCLYI,EAAiB,WAAO,IAAD,YAC1BC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,GAAWC,EAAAA,EAAAA,MACXC,EAAa,oBAAGF,EAASG,aAAZ,aAAG,EAAgBD,qBAAnB,UAEnBE,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,GAAAA,KAEH,GAAE,CAACH,IAEJ,OAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAaA,OAXAN,EAAAA,EAAAA,YAAU,WACRM,GAAa,IAEbC,EAAAA,EAAAA,IAAqBb,GAClBc,KAAKJ,GACLK,OAAM,WACLC,EAAAA,GAAAA,MAAY,wBACb,IACAC,SAAQ,kBAAML,GAAa,EAAnB,GACZ,GAAE,CAACZ,IAEAW,GACK,SAACjB,EAAA,EAAD,IAIPe,IACE,iCACE,iBAAKd,UAAU,cAAf,WACE,SAAC,KAAD,CAAMuB,GAAE,oBAAEhB,EAASG,aAAX,aAAE,EAAgBc,YAAlB,QAA0B,SAAUxB,UAAU,kBAAtD,mBAIA,SAAC,KAAD,CACEuB,GAAE,iBAAYlB,EAAZ,aACFK,MAAO,UAAAH,EAASG,aAAT,SAAgBc,KAAOjB,EAASG,MAAQ,KAC/CV,UAAU,uBAHZ,mCASF,gBACEyB,IAAKX,EAAKY,MACVC,IAAKb,EAAKc,MACV5B,UAAU,iBACVC,MAAO,CAAE4B,UAAW,QAASC,MAAO,OAAQC,UAAW,YAEzD,eAAI/B,UAAU,OAAd,SAAsBc,EAAKc,SAE3B,gBAAKI,wBAAyB,CAAEC,OAAQnB,EAAKoB,QAAQC,QAAQ,MAAO,aAEpE,SAAC,KAAD,CACEZ,GAAE,iBAAYlB,EAAZ,aACFK,MAAO,UAAAH,EAASG,aAAT,SAAgBc,KAAOjB,EAASG,MAAQ,KAC/CV,UAAU,uBAHZ,gCAQA,SAAC,KAAD,MAIP,C","sources":["components/Loader/Loader.jsx","pages/SinglePostPage/SinglePostPage.jsx"],"sourcesContent":["export const Loader = () => {\n  return (\n    <>\n      <div className=\"modal-backdrop fade show\" />\n      <div\n        className=\"modal fade show d-flex align-items-center justify-content-center\"\n        style={{ display: 'block', height: '100vh' }}\n      >\n        <div className=\"spinner-border text-light\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { confetti } from '../../components/Confetti';\nimport { Loader } from '../../components/Loader';\nimport { getSinglePostService } from '../../services/posts.service';\n\nexport const SinglePostPage = () => {\n  const { postId } = useParams();\n\n  const location = useLocation();\n  const isPostCreated = location.state?.isPostCreated ?? false;\n\n  useEffect(() => {\n    if (isPostCreated) {\n      confetti.run();\n    }\n  }, [isPostCreated]);\n\n  const [post, setPost] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getSinglePostService(postId)\n      .then(setPost)\n      .catch(() => {\n        toast.error('Something went wrong!');\n      })\n      .finally(() => setIsLoading(false));\n  }, [postId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    post && (\n      <>\n        <div className=\"d-flex mb-5\">\n          <Link to={location.state?.from ?? '/posts'} className=\"btn btn-primary\">\n            Back\n          </Link>\n\n          <Link\n            to={`/posts/${postId}/comments`}\n            state={location.state?.from ? location.state : null} // { from: location } -> { location }\n            className=\"btn btn-primary ms-4\"\n          >\n            Vew post comments\n          </Link>\n        </div>\n\n        <img\n          src={post.image}\n          alt={post.title}\n          className=\"img-fluid mb-4\"\n          style={{ maxHeight: '600px', width: '100%', objectFit: 'cover' }}\n        />\n        <h1 className=\"mb-5\">{post.title}</h1>\n\n        <div dangerouslySetInnerHTML={{ __html: post.content.replace(/\\n/g, '<br/>') }} />\n\n        <Link\n          to={`/posts/${postId}/comments`}\n          state={location.state?.from ? location.state : null} // { from: location } -> { location }\n          className=\"btn btn-primary my-4\"\n        >\n          Vew post comments\n        </Link>\n\n        <Outlet />\n      </>\n    )\n  );\n};\n"],"names":["Loader","className","style","display","height","SinglePostPage","postId","useParams","location","useLocation","isPostCreated","state","useEffect","confetti","useState","post","setPost","isLoading","setIsLoading","getSinglePostService","then","catch","toast","finally","to","from","src","image","alt","title","maxHeight","width","objectFit","dangerouslySetInnerHTML","__html","content","replace"],"sourceRoot":""}