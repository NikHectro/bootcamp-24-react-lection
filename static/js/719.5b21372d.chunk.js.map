{"version":3,"file":"static/js/719.5b21372d.chunk.js","mappings":"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","sources":["components/Posts/PostsErorr/PostsErorr.jsx","components/Posts/PostsItem/PostsItem.jsx","helpers/cut-string.js","webpack://bootcamp-24-react/./src/components/Skeleton/Skeleton.module.css?e666","components/Skeleton/Skeleton.jsx","components/Posts/PostsLoader/PostsLoader.jsx","components/Posts/PostsNotFound/PostsNotFound.jsx","components/Posts/PostsSearch/PostsSearch.jsx","components/SearchInput/alphabet.js","components/SearchInput/SearchInput.jsx","redux/rtk-posts/api.rtk-posts.js","pages/RtkPostsPage/RtkPostsPage.jsx"],"sourcesContent":["import image from './713761_big_8857bc5285.jpeg';\n\nexport const PostsError = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Все идет по плану. Потерь нет!</p>\n    </div>\n  );\n};\n","import formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport { useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { cutString } from '../../../helpers/cut-string';\n\nexport const PostsItem = ({ post, onDelete }) => {\n  const location = useLocation();\n  const profile = useSelector(state => state.profile.data);\n\n  return (\n    <div className=\"col-12 col-xl-6 col-xxl-4 mb-4\">\n      <div className=\"card\">\n        <img\n          height=\"250px\"\n          alt={post.title}\n          src={post.preview_image}\n          className=\"card-img-top\"\n          style={{ objectFit: 'cover' }}\n        />\n\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{post.title}</h5>\n\n          <p className=\"card-text\">{cutString(post.content, 60)}</p>\n\n          <ul className=\"list-group list-group-flush mb-4\">\n            <li className=\"list-group-item\">Views: {post.views}</li>\n            <li className=\"list-group-item\">Created: {formatDistanceToNow(new Date(post.created_at))}</li>\n          </ul>\n\n          <div className=\"d-flex\">\n            {profile?.id === post.user_id && (\n              <button type=\"button\" className=\"btn btn-link\" onClick={() => onDelete(post.id)}>\n                Delete post\n              </button>\n            )}\n\n            <Link to={`/posts/${post.id}`} state={{ from: location }} className=\"btn btn-link ms-3\">\n              Read post\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const cutString = (string, maxLength) => {\n  return string.length > maxLength ? string.slice(0, maxLength) + '...' : string;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"skeleton\":\"Skeleton_skeleton__xUXxh\"};","import classNames from 'classnames';\n\nimport styles from './Skeleton.module.css';\n\nexport const Skeleton = ({ className, ...props }) => {\n  return <div className={classNames(styles.skeleton, className)} {...props} />;\n};\n","import { Skeleton } from '../../Skeleton';\n\nexport const PostsLoader = ({ amount = 6 }) => {\n  return (\n    <div className=\"container-fluid g-0 pb-5 mb-5\">\n      <div className=\"row\">\n        {[...Array(amount)].map((_, i) => (\n          <div key={i} className=\"col-12 col-xl-6 col-xxl-4 mb-4\">\n            <div className=\"card\">\n              <Skeleton style={{ height: '250px' }} />\n\n              <div className=\"card-body\">\n                <h5 className=\"card-title mb-4\">\n                  <Skeleton style={{ height: '12px' }} />\n                </h5>\n\n                <div className=\"card-text\">\n                  <Skeleton className=\"my-2\" />\n                  <Skeleton className=\"w-50\" />\n                </div>\n\n                <ul className=\"list-group list-group-flush my-4\">\n                  <li className=\"list-group-item d-flex align-items-center\">\n                    Views: <Skeleton className=\"w-25 ms-2\" />\n                  </li>\n                  <li className=\"list-group-item d-flex align-items-center\">\n                    Created: <Skeleton className=\"w-25 ms-2\" />\n                  </li>\n                </ul>\n\n                <div className=\"d-flex mt-3\">\n                  <div className=\"btn btn-link disabled\">Delete post</div>\n                  <div className=\"btn btn-link disabled ms-3\">Read post</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import image from './713761_big_8857bc5285.jpeg';\n\nexport const PostsNotFound = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Произошел отрицательный поиск. Потерь нет!</p>\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Button } from '../../Button';\n\nexport const PostsSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search') ?? '';\n  const page = searchParams.get('page') ?? 1;\n\n  const [value, setValue] = useState(search);\n  const handleChange = event => setValue(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams(value.trim() ? { search: value, page: 1 } : { page: 1 });\n  };\n\n  const handleReset = () => {\n    setSearchParams({ page });\n  };\n\n  return (\n    <form className=\"input-group input-group-lg mb-5\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Type to search...\"\n        value={value}\n        onChange={handleChange}\n      />\n      <Button onClick={handleReset} className=\"btn-outline-secondary\">\n        Reset\n      </Button>\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n","export const alphabet = [\n  'None',\n  'Space',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n];\n","import { useState } from 'react';\n\nimport { omitBy } from 'lodash-es';\nimport { FiPlus, FiMinus } from 'react-icons/fi';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Button } from '../Button';\n\nimport { alphabet } from './alphabet';\n\nconst getDefaultValues = value => {\n  const result = value.replace(/[^a-z]/gi, ' ').split('');\n  if (result.length) return result.map(item => item.replace(/[^a-z]/gi, 'Space'));\n\n  return ['None'];\n};\n\nconst getStringFromCharList = list => list.join('').replace(/None/gi, '').replace(/Space/gi, ' ');\n\nconst Select = ({ value, onChange, index }) => {\n  const handleChange = event => {\n    onChange(prev => prev.map((char, i) => (index === i ? event.target.value : char)));\n  };\n\n  return (\n    <select\n      value={value}\n      onChange={handleChange}\n      className=\"form-select me-1 mb-2\"\n      aria-label=\"Default select example\"\n      style={{ width: '90px' }}\n    >\n      {alphabet.map(char => (\n        <option key={char} value={char}>\n          {char}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport const SearchInput = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page');\n  const search = searchParams.get('search');\n\n  const [charList, setCharList] = useState(() => getDefaultValues(search ?? ''));\n\n  const pushChar = () => setCharList(prev => [...prev, '']);\n  const popChar = () =>\n    setCharList(prev => (prev.length > 1 ? prev.filter((_, index) => index + 1 !== prev.length) : ['None']));\n\n  const reset = () => {\n    setSearchParams(page ? { page } : {});\n    setCharList(['None']);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams(omitBy({ page, search: getStringFromCharList(charList) }, v => !v));\n  };\n\n  return (\n    <>\n      <form action=\"#\" className=\"d-flex flex-wrap\" onSubmit={handleSubmit}>\n        {charList.map((char, index) => (\n          <Select key={index} index={index} value={char} onChange={setCharList} />\n        ))}\n\n        <Button className=\"btn-secondary me-1 mb-2\" onClick={popChar}>\n          <FiMinus />\n        </Button>\n        <Button className=\"btn-secondary me-1 mb-2\" onClick={pushChar}>\n          <FiPlus />\n        </Button>\n\n        <Button className=\"btn-secondary me-1 mb-2\" onClick={reset}>\n          Reset\n        </Button>\n\n        <Button type=\"submit\" className=\"btn-primary mb-2\">\n          Submit\n        </Button>\n      </form>\n\n      <p className=\"mt-2 mb-4\">\n        Your search query: <b>{getStringFromCharList(charList) || '...'}</b>\n      </p>\n    </>\n  );\n};\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { omitBy } from 'lodash-es';\n\nexport const postsApi = createApi({\n  reducerPath: 'rtk-posts',\n  baseQuery: fetchBaseQuery({\n    baseUrl:\n      process.env.NODE_ENV === 'production'\n        ? 'https://taupe-croissant-c4162a.netlify.app/api'\n        : 'http://70.34.201.18:8080',\n  }),\n  tagTypes: ['Posts'],\n\n  endpoints: builder => ({\n    getPosts: builder.query({\n      query: params => {\n        return {\n          url: 'posts',\n          params: omitBy({ ...params, limit: 6 }, item => !item),\n        };\n      },\n      providesTags: result => {\n        return result?.data\n          ? [...result.data.map(({ id }) => ({ type: 'Posts', id })), { type: 'Posts', id: 'LIST' }]\n          : [{ type: 'Posts', id: 'LIST' }];\n      },\n    }),\n\n    deletePost: builder.mutation({\n      query: postId => ({\n        url: `posts/${postId}`,\n        method: 'DELETE',\n      }),\n    }),\n  }),\n});\n\nexport const { useGetPostsQuery, useLazyGetPostsQuery, useDeletePostMutation } = postsApi;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { Button } from '../../components/Button';\nimport { PostsError, PostsItem, PostsLoader, PostsNotFound } from '../../components/Posts';\nimport { SearchInput } from '../../components/SearchInput';\nimport { useGetPostsQuery, useDeletePostMutation } from '../../redux/rtk-posts/api.rtk-posts';\n\nexport const RtkPostsPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page');\n  const search = searchParams.get('search') ?? '';\n\n  const { data, isSuccess, isLoading, isError } = useGetPostsQuery({ page, search });\n  // const [getPosts, { data, status, isLoading, isError, isSuccess }] = useLazyGetPostsQuery();\n  const [deletePost] = useDeletePostMutation();\n  // console.log(state);\n\n  // if (status === 'uninitialized') {\n  //   return (\n  //     <button type=\"button\" onClick={() => getPosts({ page, search })}>\n  //       Get posts\n  //     </button>\n  //   );\n  // }\n\n  // const obj = {\n  //   name: null,\n  //   surname: undefined,\n  //   balance: 0,\n  //   test: '',\n  // };\n  // console.log(omit(obj, 'test', 'balance'));\n\n  if (isLoading) {\n    return <PostsLoader />;\n  }\n\n  if (isError) {\n    return <PostsError />;\n  }\n\n  if (isSuccess && !data?.data?.length) {\n    return <PostsNotFound />;\n  }\n\n  return (\n    <>\n      <SearchInput />\n\n      <div className=\"container-fluid g-0 pb-5 mb-5\">\n        <div className=\"row\">\n          {data.data.map(post => (\n            <PostsItem key={post.id} post={post} onDelete={deletePost} />\n          ))}\n        </div>\n      </div>\n\n      <div className=\"pagination\">\n        <div className=\"btn-group mx-auto py-3\">\n          {[...Array(data.total_pages)].map((_, index) => (\n            <Button\n              key={index}\n              disabled={index + 1 === data.page}\n              onClick={() => setSearchParams({ page: index + 1, search })}\n            >\n              {index + 1}\n            </Button>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["PostsError","className","src","image","alt","style","width","PostsItem","string","maxLength","post","onDelete","location","useLocation","profile","useSelector","state","data","height","title","preview_image","objectFit","content","length","slice","views","formatDistanceToNow","Date","created_at","id","user_id","type","onClick","to","from","Skeleton","props","classNames","styles","PostsLoader","amount","Array","map","_","i","PostsNotFound","PostsSearch","useSearchParams","searchParams","setSearchParams","search","get","page","useState","value","setValue","onSubmit","event","preventDefault","trim","placeholder","onChange","target","Button","alphabet","getStringFromCharList","list","join","replace","Select","index","prev","char","SearchInput","result","split","item","getDefaultValues","charList","setCharList","action","omitBy","v","filter","postsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getPosts","query","params","url","limit","providesTags","deletePost","mutation","postId","method","useGetPostsQuery","useDeletePostMutation","useLazyGetPostsQuery","RtkPostsPage","isSuccess","isLoading","isError","Posts","total_pages","disabled"],"sourceRoot":""}