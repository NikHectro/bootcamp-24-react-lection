{"version":3,"file":"static/js/652.e29d041b.chunk.js","mappings":"8QAEMA,EAAgB,CACpBC,MAAO,GAGHC,E,MAAcC,GAAAA,OAAa,CAC/BC,QAEM,mDAIKC,EAAuB,yCAAG,WAAOC,EAAQC,GAAf,8FACdL,EAAYM,KAAZ,iBAA2BF,EAA3B,aAA8CC,GADhC,uBAC7BE,EAD6B,EAC7BA,KAD6B,kBAE9BA,GAF8B,2CAAH,wDAKvBC,EAAsB,yCAAG,WAAOJ,GAAP,mGAAeK,EAAf,+BAAwB,CAAC,EAAzB,SACbT,EAAYU,IAAZ,iBAA0BN,EAA1B,aAA6C,CAClEK,QAAO,kBAAMX,GAAkBW,KAFG,uBAC5BF,EAD4B,EAC5BA,KAD4B,kBAI7BA,GAJ6B,2CAAH,sDAOtBI,EAAoB,yCAAG,WAAMC,GAAN,+FAC3BZ,EAAYa,OAAZ,oBAAgCD,KADL,2CAAH,sD,SClBpBE,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAG5B,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KA0BA,OACE,kBAAMC,OAAO,IAAIC,UAAU,OAAOC,SAtBf,SAAAC,GACnBA,EAAMC,iBAEDN,EAAQO,QAKbR,GAAa,GACbf,EAjBa,GAiBmB,CAAEgB,QAAAA,IAC/BQ,MAAK,SAAApB,GACJqB,EAAAA,GAAAA,QAAc,gDACdb,GAAY,SAAAc,GAAI,yBAAUA,GAAV,IAAgBtB,KAAK,CAAEA,GAAH,eAAYsB,EAAKtB,QAArC,IAdIa,EAAW,GAgBhC,IACAU,OAAM,WACLF,EAAAA,GAAAA,MAAY,wBACb,IACAG,SAAQ,kBAAMb,GAAa,EAAnB,KAdTU,EAAAA,GAAAA,MAAY,4BAef,EAGC,WACE,mBAAON,UAAU,qBAAjB,WACE,yCACA,qBACEU,KAAK,IACLC,MAAOd,EACPe,SA/Ba,SAAAV,GAAK,OAAIJ,EAAWI,EAAMW,OAAOF,MAA5B,EAgClBX,UAAU,eACVc,YAAY,4BAIhB,oBAAQC,KAAK,SAASf,UAAWgB,IAAW,uBAAwBrB,EAAY,WAAa,IAA7F,UACGA,IAAa,iBAAMK,UAAU,sCADhC,cAML,E,UCjDYiB,EAAc,SAAC,GAA+B,IAAD,EAA5BC,EAA4B,EAA5BA,SAAUzB,EAAkB,EAAlBA,YAGtC,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMuB,GAAgBC,EAAAA,EAAAA,cACpB,kBACElC,EANW,IAORmB,KAAKZ,GACLe,OAAM,WACLF,EAAAA,GAAAA,MAAY,wBACb,GALL,GAMA,CAXa,GAWJb,KAGX4B,EAAAA,EAAAA,YAAU,WACRzB,GAAa,GACbuB,IAAgBV,SAAQ,kBAAMb,GAAa,EAAnB,GACzB,GAAE,CAACuB,IAaJ,OAAIxB,GAEA,gBAAKK,UAAU,8BAAf,UACE,iBAAMA,UAAU,kBAAhB,0BAKF,OAACkB,QAAD,IAACA,GAAD,UAACA,EAAUjC,YAAX,OAAC,EAAgBqC,QAKnB,+BACE,eAAItB,UAAU,aAAd,SACGkB,EAASjC,KAAKsC,KAAI,SAAAC,GAAO,OACxB,gBAAqBxB,UAAU,8CAA/B,WACE,gBAAKA,UAAU,uCAAf,UACE,4BAAQyB,EAAAA,EAAAA,GAAe,IAAIC,KAAKF,EAAQG,YAAa,IAAID,KAAQ,CAAEE,WAAW,SAGhF,gBAAK5B,UAAU,YAAY6B,wBAAyB,CAAEC,OAAQN,EAAQ3B,QAAQkC,QAAQ,MAAO,aAE7F,iBAAK/B,UAAU,YAAf,WACE,mBAAQe,KAAK,SAASf,UAAU,yBAAyBgC,QAAS,kBAnClD1C,EAmC4EkC,EAAQS,QAlC9G5C,EAAqBC,GAClBe,MAAK,WACJZ,GAAY,SAAAc,GAAI,yBAAUA,GAAV,IAAgBtB,KAAMsB,EAAKtB,KAAKiD,QAAO,SAAAC,GAAI,OAAIA,EAAKF,KAAO3C,CAAhB,KAA3C,IAChBgB,EAAAA,GAAAA,QAAc,8CACf,IACAE,OAAM,WACLF,EAAAA,GAAAA,MAAY,wBACb,IARuB,IAAAhB,CAmCkD,EAAlE,6BAGA,mBAAQyB,KAAK,SAASf,UAAU,0BAAhC,+BAXKwB,EAAQS,GADO,SANvB,2CA2BV,ECrEYG,EAAe,WAC1B,OAAgC1C,EAAAA,EAAAA,UAAS,MAAzC,eAAOwB,EAAP,KAAiBzB,EAAjB,KACA,OACE,iCACE,SAACD,EAAD,CAAaC,YAAaA,KAC1B,SAACwB,EAAD,CAAaC,SAAUA,EAAUzB,YAAaA,MAGnD,C","sources":["services/comments.service.js","components/CommentForm/CommentForm.jsx","components/CommentList/CommentList.jsx","pages/SinglePostPage/CommentsPage/CommentsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst defaultParams = {\n  limit: 4,\n};\n\nconst commentsApi = axios.create({\n  baseURL:\n    process.env.NODE_ENV === 'production'\n      ? 'https://taupe-croissant-c4162a.netlify.app/api'\n      : 'http://70.34.201.18:8080',\n});\n\nexport const createNewCommentService = async (postId, body) => {\n  const { data } = await commentsApi.post(`/posts/${postId}/comments`, body);\n  return data;\n};\n\nexport const getCommentsListService = async (postId, params = {}) => {\n  const { data } = await commentsApi.get(`/posts/${postId}/comments`, {\n    params: { ...defaultParams, ...params },\n  });\n  return data;\n};\n\nexport const deleteCommentService = async commentId => {\n  return commentsApi.delete(`/comments/${commentId}`);\n};\n","import { useState } from 'react';\n\nimport classNames from 'classnames';\nimport { toast } from 'react-toastify';\n\nimport { createNewCommentService } from '../../services/comments.service';\n\nexport const CommentForm = ({ setComments }) => {\n  const postId = 10; // hardcoded\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [content, setContent] = useState('');\n\n  const handleChange = event => setContent(event.target.value);\n  const handleReset = () => setContent('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!content.trim()) {\n      toast.error('Fill all required fields!');\n      return;\n    }\n\n    setIsLoading(true);\n    createNewCommentService(postId, { content })\n      .then(data => {\n        toast.success('You have successfully created a new comment!');\n        setComments(prev => ({ ...prev, data: [data, ...prev.data] }));\n        handleReset();\n      })\n      .catch(() => {\n        toast.error('Something went wrong!');\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <form action=\"#\" className=\"my-5\" onSubmit={handleSubmit}>\n      <label className=\"d-block form-label\">\n        <p>Post content</p>\n        <textarea\n          rows=\"5\"\n          value={content}\n          onChange={handleChange}\n          className=\"form-control\"\n          placeholder=\"Write your feedback\"\n        />\n      </label>\n\n      <button type=\"submit\" className={classNames('btn btn-primary my-2', isLoading ? 'disabled' : '')}>\n        {isLoading && <span className=\"spinner-grow spinner-grow-sm mr-2\" />}\n        Submit\n      </button>\n    </form>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { formatDistance } from 'date-fns';\nimport { toast } from 'react-toastify';\n\nimport { deleteCommentService, getCommentsListService } from '../../services/comments.service';\n\nexport const CommentList = ({ comments, setComments }) => {\n  const postId = 10; // hardcoded\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchComments = useCallback(\n    () =>\n      getCommentsListService(postId)\n        .then(setComments)\n        .catch(() => {\n          toast.error('Something went wrong!');\n        }),\n    [postId, setComments],\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchComments().finally(() => setIsLoading(false));\n  }, [fetchComments]);\n\n  const handleDeleteComment = commentId => {\n    deleteCommentService(commentId)\n      .then(() => {\n        setComments(prev => ({ ...prev, data: prev.data.filter(item => item.id !== commentId) }));\n        toast.success('You have successfully deleted your comment!');\n      })\n      .catch(() => {\n        toast.error('Something went wrong!');\n      });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"spinner-border text-primary\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    );\n  }\n\n  if (!comments?.data?.length) {\n    return <p>No comments yet!</p>;\n  }\n\n  return (\n    <>\n      <ul className=\"list-group\">\n        {comments.data.map(comment => (\n          <li key={comment.id} className=\"list-group-item list-group-item-action py-4\">\n            <div className=\"d-flex w-100 justify-content-between\">\n              <small>{formatDistance(new Date(comment.created_at), new Date(), { addSuffix: true })}</small>\n            </div>\n\n            <div className=\"mb-4 mt-3\" dangerouslySetInnerHTML={{ __html: comment.content.replace(/\\n/g, '<br/>') }} />\n\n            <div className=\"btn-group\">\n              <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => handleDeleteComment(comment.id)}>\n                Delete comment\n              </button>\n              <button type=\"button\" className=\"btn btn-outline-primary\">\n                Edit comment\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport { CommentForm } from '../../../components/CommentForm';\nimport { CommentList } from '../../../components/CommentList';\n\nexport const CommentsPage = () => {\n  const [comments, setComments] = useState(null);\n  return (\n    <>\n      <CommentForm setComments={setComments} />\n      <CommentList comments={comments} setComments={setComments} />\n    </>\n  );\n};\n"],"names":["defaultParams","limit","commentsApi","axios","baseURL","createNewCommentService","postId","body","post","data","getCommentsListService","params","get","deleteCommentService","commentId","delete","CommentForm","setComments","useState","isLoading","setIsLoading","content","setContent","action","className","onSubmit","event","preventDefault","trim","then","toast","prev","catch","finally","rows","value","onChange","target","placeholder","type","classNames","CommentList","comments","fetchComments","useCallback","useEffect","length","map","comment","formatDistance","Date","created_at","addSuffix","dangerouslySetInnerHTML","__html","replace","onClick","id","filter","item","CommentsPage"],"sourceRoot":""}