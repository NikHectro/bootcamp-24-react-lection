{"version":3,"file":"static/js/563.e839372a.chunk.js","mappings":"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","sources":["components/Posts/PostsErorr/PostsErorr.jsx","../node_modules/date-fns/esm/formatDistanceToNow/index.js","components/Posts/PostsItem/PostsItem.jsx","helpers/cut-string.js","webpack://bootcamp-24-react/./src/components/Skeleton/Skeleton.module.css?e666","components/Skeleton/Skeleton.jsx","components/Posts/PostsLoader/PostsLoader.jsx","components/Posts/PostsNotFound/PostsNotFound.jsx","components/Posts/PostsSearch/PostsSearch.jsx","pages/PostsListPage/PostsListPage.jsx"],"sourcesContent":["import image from './713761_big_8857bc5285.jpeg';\n\nexport const PostsError = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Все идет по плану. Потерь нет!</p>\n    </div>\n  );\n};\n","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport default function formatDistanceToNow(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), options);\n}","import formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport { useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { cutString } from '../../../helpers/cut-string';\n\nexport const PostsItem = ({ post, onDelete }) => {\n  const location = useLocation();\n  const profile = useSelector(state => state.profile.data);\n\n  return (\n    <div className=\"col-12 col-xl-6 col-xxl-4 mb-4\">\n      <div className=\"card\">\n        <img\n          height=\"250px\"\n          alt={post.title}\n          src={post.preview_image}\n          className=\"card-img-top\"\n          style={{ objectFit: 'cover' }}\n        />\n\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{post.title}</h5>\n\n          <p className=\"card-text\">{cutString(post.content, 60)}</p>\n\n          <ul className=\"list-group list-group-flush mb-4\">\n            <li className=\"list-group-item\">Views: {post.views}</li>\n            <li className=\"list-group-item\">Created: {formatDistanceToNow(new Date(post.created_at))}</li>\n          </ul>\n\n          <div className=\"d-flex\">\n            {profile?.id === post.user_id && (\n              <button type=\"button\" className=\"btn btn-link\" onClick={() => onDelete(post.id)}>\n                Delete post\n              </button>\n            )}\n\n            <Link to={`/posts/${post.id}`} state={{ from: location }} className=\"btn btn-link ms-3\">\n              Read post\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const cutString = (string, maxLength) => {\n  return string.length > maxLength ? string.slice(0, maxLength) + '...' : string;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"skeleton\":\"Skeleton_skeleton__xUXxh\"};","import classNames from 'classnames';\n\nimport styles from './Skeleton.module.css';\n\nexport const Skeleton = ({ className, ...props }) => {\n  return <div className={classNames(styles.skeleton, className)} {...props} />;\n};\n","import { Skeleton } from '../../Skeleton';\n\nexport const PostsLoader = ({ amount = 6 }) => {\n  return (\n    <div className=\"container-fluid g-0 pb-5 mb-5\">\n      <div className=\"row\">\n        {[...Array(amount)].map((_, i) => (\n          <div key={i} className=\"col-12 col-xl-6 col-xxl-4 mb-4\">\n            <div className=\"card\">\n              <Skeleton style={{ height: '250px' }} />\n\n              <div className=\"card-body\">\n                <h5 className=\"card-title mb-4\">\n                  <Skeleton style={{ height: '12px' }} />\n                </h5>\n\n                <div className=\"card-text\">\n                  <Skeleton className=\"my-2\" />\n                  <Skeleton className=\"w-50\" />\n                </div>\n\n                <ul className=\"list-group list-group-flush my-4\">\n                  <li className=\"list-group-item d-flex align-items-center\">\n                    Views: <Skeleton className=\"w-25 ms-2\" />\n                  </li>\n                  <li className=\"list-group-item d-flex align-items-center\">\n                    Created: <Skeleton className=\"w-25 ms-2\" />\n                  </li>\n                </ul>\n\n                <div className=\"d-flex mt-3\">\n                  <div className=\"btn btn-link disabled\">Delete post</div>\n                  <div className=\"btn btn-link disabled ms-3\">Read post</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import image from './713761_big_8857bc5285.jpeg';\n\nexport const PostsNotFound = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n      <img src={image} alt=\"not found\" style={{ width: 300 }} />\n      <p className=\"my-3\">Произошел отрицательный поиск. Потерь нет!</p>\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Button } from '../../Button';\n\nexport const PostsSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search') ?? '';\n  const page = searchParams.get('page') ?? 1;\n\n  const [value, setValue] = useState(search);\n  const handleChange = event => setValue(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams(value.trim() ? { search: value, page: 1 } : { page: 1 });\n  };\n\n  const handleReset = () => {\n    setSearchParams({ page });\n  };\n\n  return (\n    <form className=\"input-group input-group-lg mb-5\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Type to search...\"\n        value={value}\n        onChange={handleChange}\n      />\n      <Button onClick={handleReset} className=\"btn-outline-secondary\">\n        Reset\n      </Button>\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Button } from '../../components/Button';\nimport { PostsError, PostsItem, PostsLoader, PostsNotFound, PostsSearch } from '../../components/Posts';\nimport { Status } from '../../constants/fetch-status';\nimport { deletePostThunk, getPostsThunk } from '../../redux/posts/thunk.posts';\n\nexport const PostsListPage = () => {\n  const dispatch = useDispatch();\n  const { posts, status } = useSelector(state => state.posts);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page');\n  const search = searchParams.get('search') ?? '';\n\n  const handleDelete = postId => {\n    dispatch(deletePostThunk({ postId, params: { page, search } }));\n  };\n\n  useEffect(() => {\n    dispatch(getPostsThunk({ search, page }));\n  }, [search, page, dispatch]);\n\n  if (status === Status.Loading || status === Status.Idle) {\n    return <PostsLoader />;\n  }\n\n  if (status === Status.Error) {\n    return <PostsError />;\n  }\n\n  if (status === Status.Success && !posts) {\n    return <PostsNotFound />;\n  }\n\n  return (\n    <>\n      <PostsSearch />\n\n      <div className=\"container-fluid g-0 pb-5 mb-5\">\n        <div className=\"row\">\n          {posts.data.map(post => (\n            <PostsItem key={post.id} post={post} onDelete={handleDelete} />\n          ))}\n        </div>\n      </div>\n\n      <div className=\"pagination\">\n        <div className=\"btn-group mx-auto py-3\">\n          {[...Array(posts.total_pages)].map((_, index) => (\n            <Button\n              key={index}\n              disabled={index + 1 === posts.page}\n              onClick={() => setSearchParams({ page: index + 1, search })}\n            >\n              {index + 1}\n            </Button>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["PostsError","className","src","image","alt","style","width","formatDistanceToNow","dirtyDate","options","requiredArgs","arguments","distanceInWords","Date","now","PostsItem","string","maxLength","post","onDelete","location","useLocation","profile","useSelector","state","data","height","title","preview_image","objectFit","content","length","slice","views","created_at","id","user_id","type","onClick","to","from","Skeleton","props","classNames","styles","PostsLoader","amount","Array","map","_","i","PostsNotFound","PostsSearch","useSearchParams","searchParams","setSearchParams","search","get","page","useState","value","setValue","onSubmit","event","preventDefault","trim","placeholder","onChange","target","Button","PostsListPage","dispatch","useDispatch","posts","status","handleDelete","postId","deletePostThunk","params","useEffect","getPostsThunk","Status","total_pages","index","disabled"],"sourceRoot":""}